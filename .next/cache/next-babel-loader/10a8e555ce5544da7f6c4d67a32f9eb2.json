{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\agust\\\\OneDrive\\\\Escritorio\\\\Web Bos Courses\\\\Advanced-React-master\\\\sick-fits\\\\frontend\\\\components\\\\Checkout.js\";\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport NProgress from 'nprogress';\nimport { useState } from 'react';\nimport SickButton from './styles/SickButton';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);bottom:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  async function handleSubmit(e) {\n    // 1. Stop the form from submitting and turn the loader one\n    e.preventDefault();\n    setLoading(true);\n    console.log('Working...'); // 2. Start the page transition\n\n    NProgress.start(); // 3. Create the payment method via stripe (token comes back here if successful)\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod); // 4. Handle any errors from stripe\n\n    if (error) {\n      setError(error);\n    } // 5. Send the token from step 3 to our keystone server, via a custom mutation!\n    // 6. Change the page to view the order\n    // 7. Close the cart\n    // 8. Turn the loader off\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["C:/Users/agust/OneDrive/Escritorio/Web Bos Courses/Advanced-React-master/sick-fits/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","NProgress","useState","SickButton","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","handleSubmit","e","preventDefault","console","log","start","paymentMethod","createPaymentMethod","type","card","getElement","message","Checkout"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SACEC,WADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,SAJF,QAKO,yBALP;AAMA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,MAAMC,kBAAkB,GAAGT,MAAM,CAACU,IAAV;AAAA;AAAA;AAAA,8IAAxB;AASA,MAAMC,SAAS,GAAGV,UAAU,CAACW,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMa,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,iBAAekB,YAAf,CAA4BC,CAA5B,EAA+B;AAC7B;AACAA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAJ6B,CAK7B;;AACApB,IAAAA,SAAS,CAACqB,KAAV,GAN6B,CAO7B;;AACA,UAAM;AAAEX,MAAAA,KAAF;AAASY,MAAAA;AAAT,QAA2B,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAChEC,MAAAA,IAAI,EAAE,MAD0D;AAEhEC,MAAAA,IAAI,EAAEV,QAAQ,CAACW,UAAT,CAAoB9B,WAApB;AAF0D,KAA3B,CAAvC;AAIAuB,IAAAA,OAAO,CAACC,GAAR,CAAYE,aAAZ,EAZ6B,CAa7B;;AACA,QAAIZ,KAAJ,EAAW;AACTC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAhB4B,CAiB7B;AACA;AACA;AACA;;AACD;;AACD,sBACE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEM,YAA9B;AAAA,eACGN,KAAK,iBAAI;AAAA,gBAAIA,KAAK,CAACiB;AAAV;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AAED,SAASC,QAAT,GAAoB;AAClB,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEvB,SAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,SAASuB,QAAT","sourcesContent":["import styled from 'styled-components';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\nimport NProgress from 'nprogress';\r\nimport { useState } from 'react';\r\nimport SickButton from './styles/SickButton';\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n  bottom: 1px solid rgba(0, 0, 0, 0.06);\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  async function handleSubmit(e) {\r\n    // 1. Stop the form from submitting and turn the loader one\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    console.log('Working...');\r\n    // 2. Start the page transition\r\n    NProgress.start();\r\n    // 3. Create the payment method via stripe (token comes back here if successful)\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n    console.log(paymentMethod);\r\n    // 4. Handle any errors from stripe\r\n    if (error) {\r\n      setError(error);\r\n    }\r\n    // 5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n    // 6. Change the page to view the order\r\n    // 7. Close the cart\r\n    // 8. Turn the loader off\r\n  }\r\n  return (\r\n    <CheckoutFormStyles onSubmit={handleSubmit}>\r\n      {error && <p>{error.message}</p>}\r\n      <CardElement />\r\n      <SickButton>Check out Now</SickButton>\r\n    </CheckoutFormStyles>\r\n  );\r\n}\r\n\r\nfunction Checkout() {\r\n  return (\r\n    <Elements stripe={stripeLib}>\r\n      <CheckoutForm />\r\n    </Elements>\r\n  );\r\n}\r\n\r\nexport { Checkout };\r\n"]},"metadata":{},"sourceType":"module"}