{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/agust/OneDrive/Escritorio/Web Bos Courses/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/agust/OneDrive/Escritorio/Web Bos Courses/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/agust/OneDrive/Escritorio/Web Bos Courses/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/agust/OneDrive/Escritorio/Web Bos Courses/Advanced-React-master/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\agust\\\\OneDrive\\\\Escritorio\\\\Web Bos Courses\\\\Advanced-React-master\\\\sick-fits\\\\frontend\\\\components\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CREATE_ORDER_MUTATION($token: String!) {\\n    checkout(token: $token) {\\n      id\\n      charge\\n      total\\n      items {\\n        id\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport NProgress from 'nprogress';\nimport { useState } from 'react';\nimport nProgress from 'nprogress';\nimport { useMutation } from '@apollo/client';\nimport SickButton from './styles/SickButton';\nvar CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);bottom:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\n_c = CheckoutFormStyles;\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\nvar stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  _s();\n\n  var _useState = useState(),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var _useMutation = useMutation(CREATE_ORDER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      checkout = _useMutation2[0],\n      graphQLError = _useMutation2[1].error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$stripe$createP, error, paymentMethod;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // 1. Stop the form from submitting and turn the loader one\n              e.preventDefault();\n              setLoading(true);\n              console.log('Working...'); // 2. Start the page transition\n\n              NProgress.start(); // 3. Create the payment method via stripe (token comes back here if successful)\n\n              _context.next = 6;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: elements.getElement(CardElement)\n              });\n\n            case 6:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n              console.log(paymentMethod); // 4. Handle any errors from stripe\n\n              if (error) {\n                setError(error);\n              } // 5. Send the token from step 3 to our keystone server, via a custom mutation!\n              // 6. Change the page to view the order\n              // 7. Close the cart\n              // 8. Turn the loader off\n\n\n              setLoading(false);\n              nProgress.done();\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"XEbF03Na/UBenDMH3JozVN2ndyU=\", false, function () {\n  return [useStripe, useElements, useMutation];\n});\n\n_c2 = CheckoutForm;\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Checkout;\nexport { Checkout };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutFormStyles\");\n$RefreshReg$(_c2, \"CheckoutForm\");\n$RefreshReg$(_c3, \"Checkout\");","map":{"version":3,"sources":["C:/Users/agust/OneDrive/Escritorio/Web Bos Courses/Advanced-React-master/sick-fits/frontend/components/Checkout.js"],"names":["styled","loadStripe","CardElement","Elements","useElements","useStripe","NProgress","useState","nProgress","useMutation","SickButton","CheckoutFormStyles","form","CREATE_ORDER_MUTATION","gql","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","checkout","graphQLError","handleSubmit","e","preventDefault","console","log","start","createPaymentMethod","type","card","getElement","paymentMethod","done","fontSize","message","Checkout"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\nimport NProgress from 'nprogress';\r\nimport { useState } from 'react';\r\nimport nProgress from 'nprogress';\r\nimport { useMutation } from '@apollo/client';\r\nimport SickButton from './styles/SickButton';\r\n\r\nconst CheckoutFormStyles = styled.form`\r\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\r\n  bottom: 1px solid rgba(0, 0, 0, 0.06);\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-gap: 1rem;\r\n`;\r\n\r\nconst CREATE_ORDER_MUTATION = gql`\r\n  mutation CREATE_ORDER_MUTATION($token: String!) {\r\n    checkout(token: $token) {\r\n      id\r\n      charge\r\n      total\r\n      items {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\r\n\r\nfunction CheckoutForm() {\r\n  const [error, setError] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [checkout, { error: graphQLError }] = useMutation(\r\n    CREATE_ORDER_MUTATION\r\n  );\r\n\r\n  async function handleSubmit(e) {\r\n    // 1. Stop the form from submitting and turn the loader one\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    console.log('Working...');\r\n    // 2. Start the page transition\r\n    NProgress.start();\r\n    // 3. Create the payment method via stripe (token comes back here if successful)\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n    });\r\n    console.log(paymentMethod);\r\n    // 4. Handle any errors from stripe\r\n    if (error) {\r\n      setError(error);\r\n    }\r\n    // 5. Send the token from step 3 to our keystone server, via a custom mutation!\r\n    // 6. Change the page to view the order\r\n    // 7. Close the cart\r\n    // 8. Turn the loader off\r\n    setLoading(false);\r\n    nProgress.done();\r\n  }\r\n  return (\r\n    <CheckoutFormStyles onSubmit={handleSubmit}>\r\n      {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\r\n      <CardElement />\r\n      <SickButton>Check out Now</SickButton>\r\n    </CheckoutFormStyles>\r\n  );\r\n}\r\n\r\nfunction Checkout() {\r\n  return (\r\n    <Elements stripe={stripeLib}>\r\n      <CheckoutForm />\r\n    </Elements>\r\n  );\r\n}\r\n\r\nexport { Checkout };\r\n"]},"metadata":{},"sourceType":"module"}